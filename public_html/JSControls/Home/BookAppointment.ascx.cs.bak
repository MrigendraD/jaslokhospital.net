using BusinessDataLayer;
using DotNetNuke.Entities.Modules;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

public partial class JSControls_Home_BookAppointment : PortalModuleBase
{

    public BusinessLogic objBusinessLogic = new BusinessLogic();
    public DataAccessLogic objDALogic = new DataAccessLogic();
    public DataAccessEntities objDAEntities = new DataAccessEntities();
    DataSet dtSpecialityDoctor = new DataSet();
    DataSet dtSpeciality = new DataSet();

    protected void Page_Load(object sender, EventArgs e)
    {
        dtSpecialityDoctor = (DataSet)Cache[AppGlobal.SpecialityDoctorCache];
        objDAEntities.SpecialtyId = -1;
        if (dtSpecialityDoctor == null)
        {
            dtSpecialityDoctor = objBusinessLogic.GetSpecialtyDoctor(objDAEntities);
            Cache.Insert(AppGlobal.SpecialityDoctorCache, dtSpecialityDoctor);
        }

        dtSpeciality = (DataSet)Cache[AppGlobal.SpecialityCache];
        if (dtSpeciality == null)
        {
            dtSpeciality = (DataSet)objBusinessLogic.GetSpeciality();
            Cache.Insert(AppGlobal.SpecialityCache, dtSpeciality);
        }
        if (!IsPostBack)
        {
            BindSpecialty();
            bindDoctor();
        }

    }
    public void BindSpecialty()
    {
        try
        {
            ddlSpecialtyB.DataSource = dtSpeciality;
            ddlSpecialtyB.DataValueField = "SpecialtyId";
            ddlSpecialtyB.DataTextField = "SpecialtyName";
            ddlSpecialtyB.DataBind();
            ddlSpecialtyB.Items.Insert(0, new ListItem("Search by Speciality", "0"));
        }
        catch (Exception ex)
        {
        }
    }
    private void bindDoctor()
    {
        string[] TobeDistinct = { "DoctorId", "Name" };

        DataTable dt = new DataTable();
        dt = dtSpecialityDoctor.Tables[0].DefaultView.ToTable(true, TobeDistinct);
        ddlDoctor.DataValueField = "DoctorId";
        ddlDoctor.DataTextField = "Name";

        ddlDoctor.DataSource = dt;
        ddlDoctor.DataBind();
        ddlDoctor.Items.Insert(0, new ListItem("Select Doctor", "0"));
    }
    protected void ddlSpecialtyB_SelectedIndexChanged(object sender, EventArgs e)
    {
        DataView dtView = new DataView(dtSpecialityDoctor.Tables[0]);
        dtView.RowFilter = "SpecialityId=" + ddlSpecialtyB.SelectedValue;
        ddlDoctor.DataValueField = "DoctorId";
        ddlDoctor.DataTextField = "Name";

        ddlDoctor.DataSource = dtView;
        ddlDoctor.DataBind();
        ddlDoctor.Items.Insert(0, new ListItem("Search by Doctor", "0"));
    }
    
    protected void tbnHBAppointment_Click(object sender, EventArgs e)
    {
		Page.ClientScript.RegisterStartupScript(this.GetType(), "alert", "alert('Validated');", true);
        int SID = Convert.ToInt32(ddlSpecialtyB.SelectedValue);
        int DID = Convert.ToInt32(ddlDoctor.SelectedValue);
        /*string SD;
        if (!string.IsNullOrEmpty(txtdatetime.Text))
        {
            SD = Convert.ToDateTime(txtdatetime.Text).ToString("yyyyMMddHHmmss");
            Response.Redirect("fix-an-appointment.aspx?DI=" + DID);
        }
        else
        {*/
            Response.Redirect("/fix-appointment/"+CommonFn.RemoveSpecialCharacters(doctor)+"/" + di);
        //}       
    }
    protected void btnHBookAppointment_Click(object sender, EventArgs e)
    {
            Response.Redirect("/fix-appointment/"+CommonFn.RemoveSpecialCharacters(doctor)+"/" + di);
       
    }
}